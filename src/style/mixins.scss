@mixin ns($cls) {
  $NS: $namespace + '-' + $cls;

  .#{$NS} {
    @content;
  }
}

//设置全局var
@mixin setVar($var, $value) {
  $varName: joinVarName($var);

  #{$varName}: $value;
}

//设置全局var，根据var名map取值
@mixin setVarFormVar($var, $gVar) {
  $varName: joinVarName($var);
  $gVarName: joinVarName($gVar);
  // @debug $varName, $gVarName;

  #{$varName}: var(#{$gVarName});
}

//根据map生成全局var
@mixin generate-var-map($varMap, $key-prefix: '', $key-suffix: '') {
  @each $key, $value in $varMap {
    //根据值是不是map调用不同的方法
    @include setVar(($key-prefix, $key, $key-suffix), $value);
  }
}

@mixin generate-colors($colors, $type) {
  @each $key, $value in $colors {
    @include setVar(($key, 'color'), $value);

    $color-map: (); // 创建一个空 map

    @for $i from 2 through 10 {
      $color: '';
      @if ($type== 'light') {
        $color: lighten($value, $i * 5%); // 计算颜色
      } @else {
        $color: darken($value, $i * 5%); // 计算颜色
      }

      $color-name: '#{$i}'; // 设置变量名
      $var-name: '--#{$color-name}'; // CSS 自定义属性名称

      $color-map: map-merge(
        $color-map,
        (
          $i: $color
        )
      );
    }

    @each $colorKey, $colorValue in $color-map {
      @include setVar(($key, 'color', $colorKey), $colorValue);
    }
  }
}
